/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif}hr{height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{padding:0}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}body{display:flex;flex-direction:column;min-height:100vh;text-align:center}.slippy-slider{display:flex;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;-webkit-overflow-scrolling:touch;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;-ms-overflow-style:none}.slippy-slider:after{margin-left:-1px}.slippy-slider:after,.slippy-slider:before{content:"";display:block;width:1px;flex:0 0 1px}.slippy-slider:before{margin-right:-1px}.slippy-slider::-webkit-scrollbar{width:0;height:0}.slippy-slider__track{display:flex;height:100%}.slippy-slider__slide{scroll-snap-align:var(--scroll-snap-align)}.slippy-slider__track{position:relative;padding-left:calc(50vw - 200px);padding-right:calc(50vw - 200px);border:1px solid red}.slippy-slider__slide{position:relative;display:flex;align-items:center;justify-content:center;min-width:400px;height:400px;margin:0 20px;background-color:#d0f2ff;box-shadow:inset 0 0 0 1px rgba(0,0,255,.5);transition:transform .3s cubic-bezier(0,0,.5,1),background-color .3s linear}.slippy-slider__slide.on-screen{background-color:#d3d0ff}.slippy-slider__slide.on-screen:after{content:"on-screen";display:block;width:100%;position:absolute;top:0}.slippy-slider__slide.active-slide{background-color:#6f9dff}.slippy-slider__slide.active-slide:before{content:"active-slide";display:block;width:100%;position:absolute;bottom:0}.slide__inner{height:100px;width:100px;margin:auto;background-color:#ebf9ff;border-radius:4px;display:flex;justify-content:center;align-items:center;box-shadow:0 0 0 0 rgba(0,0,0,.7);transition:transform .5s cubic-bezier(0,0,.5,1),box-shadow .5s cubic-bezier(0,0,.5,1)}.on-screen .slide__inner{box-shadow:0 10px 30px 0 rgba(0,0,0,.2);transform:scale(1.5);transition:transform .8s cubic-bezier(0,0,.5,1),box-shadow .5s cubic-bezier(0,0,.5,1)}.active-slide .slide__inner{box-shadow:0 10px 30px 0 rgba(0,0,0,.2);transform:scale(2)}.slider-wrap{position:relative;border:1px dashed grey}.control-buttons{position:absolute;z-index:1;width:100%;display:flex;justify-content:space-between;bottom:0;transform:translateY(150%);pointer-events:none}.control-next,.control-prev{width:40px;height:40px;border-radius:100%;pointer-events:all;cursor:pointer;outline:none;border:none;background-color:#a9a9a9;color:#fff;font-size:20px;display:flex;justify-content:center;align-items:center;line-height:1}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
